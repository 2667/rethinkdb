sudo: required
language: cpp
dist: trusty
services:
  - docker
env:
- EXTRA_CXX_FLAGS -fprofile-arcs -ftest-coverage
notifications:
  email:
  - rebirthdb-dev@googlegroups.com

jobs:
  include:
    - stage: Unit Tests
      dist: trusty
      name: "Ubuntu Trusty Unit Tests"
      
      before_install:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get -qq update
        - sudo apt-get -y install docker-ce build-essential
        - ./configure CXXFLAGS="$CXX_FLAGS" --allow-fetch
        - make dist
        - tar xvzf build/packages/rebirthdb-$(eval "./scripts/gen-version.sh").tgz -C docker/trusty --strip-components=1
      
      install:  
        - cd docker/trusty
        - docker build -t rebirthdb-trusty --build-arg CXX_FLAGS="$CXX_FLAGS $EXTRA_CXX_FLAGS" .

      script:
        - docker run rebirthdb-trusty /bin/bash -c "./build/release/rebirthdb-unittest" 

      after_success:
        - coveralls --gcov-options '\-lp'

    - dist: trusty
      name: "Ubuntu Xenial Unit Tests"

      before_install:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get -qq update
        - sudo apt-get -y install docker-ce build-essential
        - ./configure CXXFLAGS="$CXX_FLAGS" --allow-fetch
        - make dist
        - tar xvzf build/packages/rebirthdb-$(eval "./scripts/gen-version.sh").tgz -C docker/xenial --strip-components=1
        
      install:  
        - cd docker/xenial
        - docker build -t rebirthdb-xenial --build-arg CXX_FLAGS="$CXX_FLAGS $EXTRA_CXX_FLAGS" .

      script:
      - docker run rebirthdb-xenial /bin/bash -c "./build/release/rebirthdb-unittest"

      after_success:
      - coveralls --gcov-options '\-lp'
